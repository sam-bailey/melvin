Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
SEED, _seed = random.split(SEED,2)
samples = gaussian_density_estimator.sample_params(prng_key = _seed, n_samples = 10000, method="laplace")
plt.hist2d(samples[:,0], samples[:,1], bins=(30,30), cmin=1)
plt.axhline(LATENT_STD, color="r", label="True parameters")
plt.axvline(LATENT_MEAN, color="r")
plt.xlabel("Latent Mean")
plt.ylabel("Latent Std")
plt.colorbar()
plt.legend()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
[0;32m<ipython-input-6-6518275a524e>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0mSEED[0m[0;34m,[0m [0m_seed[0m [0;34m=[0m [0mrandom[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0mSEED[0m[0;34m,[0m[0;36m2[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0msamples[0m [0;34m=[0m [0mgaussian_density_estimator[0m[0;34m.[0m[0msample_params[0m[0;34m([0m[0mprng_key[0m [0;34m=[0m [0m_seed[0m[0;34m,[0m [0mn_samples[0m [0;34m=[0m [0;36m10000[0m[0;34m,[0m [0mmethod[0m[0;34m=[0m[0;34m"laplace"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0mplt[0m[0;34m.[0m[0mhist2d[0m[0;34m([0m[0msamples[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0msamples[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;36m1[0m[0;34m][0m[0;34m,[0m [0mbins[0m[0;34m=[0m[0;34m([0m[0;36m30[0m[0;34m,[0m[0;36m30[0m[0;34m)[0m[0;34m,[0m [0mcmin[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0mplt[0m[0;34m.[0m[0maxhline[0m[0;34m([0m[0mLATENT_STD[0m[0;34m,[0m [0mcolor[0m[0;34m=[0m[0;34m"r"[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m"True parameters"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0mplt[0m[0;34m.[0m[0maxvline[0m[0;34m([0m[0mLATENT_MEAN[0m[0;34m,[0m [0mcolor[0m[0;34m=[0m[0;34m"r"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/work/melvin/melvin/src/melvin/laplace.py[0m in [0;36msample_params[0;34m(self, prng_key, n_samples, method)[0m
[1;32m    180[0m             [0;32mreturn[0m [0;34m-[0m[0;36m1[0m [0;34m*[0m [0mobjective_vmap[0m[0;34m([0m[0mparams[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    181[0m [0;34m[0m[0m
[0;32m--> 182[0;31m         [0msampler_cls[0m [0;34m=[0m [0msamplers[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mmethod[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    183[0m         sampler = sampler_cls(
[1;32m    184[0m             [0mparams[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mparams[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/work/melvin/melvin/src/melvin/object_tagger.py[0m in [0;36mget[0;34m(self, object_name)[0m
[1;32m     14[0m [0;34m[0m[0m
[1;32m     15[0m     [0;32mdef[0m [0mget[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mobject_name[0m[0;34m:[0m [0mstr[0m[0;34m)[0m [0;34m->[0m [0mAny[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 16[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_objects[0m[0;34m[[0m[0mobject_name[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m
[0;31mKeyError[0m: 'laplace'
KeyError: 'laplace'

